from pathlib import Path
import webbrowser
import pyttsx3
import speech_recognition as sr
from tkinter import Tk, Canvas, Button, PhotoImage, Text
from PIL import Image, ImageDraw
import subprocess
import threading

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"E:\sj\build\assets\frame1")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)
 
# Inicializa o mecanismo de reconhecimento de fala
r = sr.Recognizer()

# Inicializa o mecanismo de texto para fala
engine = pyttsx3.init()

# Função para reproduzir o texto fornecido
def falar(texto):
    engine.say(texto)
    engine.runAndWait()

# Função para ouvir comandos de voz
def ouvir():
    with sr.Microphone() as source:
        print("Ouvindo...")
        audio = r.listen(source)

    try:
        print("Reconhecendo...")
        query = r.recognize_google(audio, language="pt-BR")
        print(f"Usuário disse: {query}")
        return query
    except sr.UnknownValueError:
        print("Desculpe, não entendi.")
    except sr.RequestError as e:
        print(f"Desculpe, ocorreu um erro no serviço de reconhecimento de fala: {e}")

    return ""

def destroy():
    window.destroy()
# Função para executar comandos de voz
def executar_comandos_voz():
    while True:
        button_1.config(image=button_image_2)
        print("Em que posso ajudar?")
        comando = ouvir().lower()

        if "trocar tomada" in comando:
            threading.Thread(target=destroy).start()
            subprocess.run(["python", "E:\\SeuJoao\\sj\\tomada.py"])
           
        elif "trocar torneira" in comando:
            threading.Thread(target=destroy).start()
            subprocess.run(["python", "E:\\SeuJoao\\sj\\torneira.py"])
              
        elif "desentupir" in comando:
            threading.Thread(target=destroy).start()
            subprocess.run(["python", "E:\\SeuJoao\\sj\\pia.py"])    
            
        elif "sair" in comando or "encerrar" in comando or "obrigado" in comando:
            falar("Até logo!")
            break
        if not comando:
            canvas.itemconfig(text_id, text="Desculpe, não entendi!")
            break
        else:
            canvas.itemconfig(text_id, text="Olá, Em que eu posso te ajudar!")

           
        
        

    button_1.config(image=button_image_1)
def on_button_click():
    threading.Thread(target=executar_comandos_voz).start()


window = Tk()
window.title("Seu João")
window.geometry("360x800")
window.configure(bg="#B9C6D9")

canvas = Canvas(
    window,
    bg="#B9C6D9",
    height=800,
    width=360,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)
canvas.place(x=0, y=0)

canvas.create_rectangle(
    1.0,
    487.0,
    361.0,
    601.0,
    fill="#FFFFFF",
    outline=""
)
canvas.pack()
text_id = canvas.create_text(170, 545, text="Olá, Em que eu posso te ajudar!", fill="black", font=("Inter", 16, "bold")   
)

button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=on_button_click,
    relief="flat",
    compound="center"
)

button_1.place(
    x=123.0,
    y=650.0,
    width=120.0,
    height=120.0
)

   
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    181.0,
    269.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    180.0,
    31.0,
    image=image_image_2
)
window.resizable(False, False)
window.mainloop()
